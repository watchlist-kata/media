/*
команда для генерации .pb файлов, запускается из /api
protoc -I . \
--go_out=. --go_opt=paths=source_relative \
--go-grpc_out=. --go-grpc_opt=paths=source_relative \
--grpc-gateway_out=. --grpc-gateway_opt=paths=source_relative \
media.proto
 */

syntax = "proto3";

package media;

option go_package = "github.com/watchlist-kata/media/api";

import "google/api/annotations.proto";

// Сообщение для фильма или сериала
message Media {
  int64 id = 1;                 // Уникальный идентификатор
  int64 tmdb_id = 2;            // ID фильма или шоу в TMDB
  string type = 3;              // Тип (Movie или Show)
  string title = 4;             // Название на английском
  string title_ru = 5;          // Название на русском
  string description = 6;       // Описание на английском
  string description_ru = 7;    // Описание на русском
  string release_date = 8;      // Дата выхода
  string poster = 9;            // URL постера
}

// Сообщение для запроса на получение медиа
message GetMediaRequest {
  int64 id = 1;                 // ID медиа для получения
  string name = 2;              // Название медиа для поиска
}

// Сообщение для запроса на сохранение медиа
message SaveMediaRequest {
  Media media = 1;              // Медиа для сохранения или обновления
}

// Сообщение для списка медиа
message MediaList {
  repeated Media medias = 1;    // Список медиа
}

// Сервис медиа
service MediaService {
  rpc GetMediaByID (GetMediaRequest) returns (Media) {
    option (google.api.http) = {
      get: "/media/{id}"
    };
  }           // Получение медиа по ID

  rpc GetMediasByName (GetMediaRequest) returns (MediaList) {
    option (google.api.http) = {
      get: "/medias/search"
    };
  }   // Получение медиа по названию

  rpc SaveMedia (SaveMediaRequest) returns (Media) {
    option (google.api.http) = {
      post: "/media"
      body: "media"
    };
  }             // Сохранение медиа в базе данных

  rpc UpdateMedia (SaveMediaRequest) returns (Media) { // Новый метод обновления
    option (google.api.http) = {
      put: "/media"
      body: "media"
    };
  }             // Обновление информации о медиа
}
